{
  "results": [
    {
      "source": {
        "path": "/Users/danbreu/Downloads/Capstone1/packages/tailwindcss/tailwindcss.cdx.json",
        "type": "sbom"
      },
      "packages": [
        {
          "package": {
            "name": "esbuild",
            "version": "0.21.5",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2025-02-10T17:48:08Z",
              "published": "2025-02-10T17:48:07Z",
              "schema_version": "1.7.3",
              "id": "GHSA-67mh-4wv8-2f99",
              "related": [
                "CGA-4v28-58cf-ggx7",
                "CGA-5qqq-3383-mhjr",
                "CGA-75rh-2q2q-wm52",
                "CGA-m983-9xr3-349j",
                "CGA-mhg6-chj9-5v88",
                "CGA-rjff-7jch-vw6j",
                "CGA-w25f-r54p-vh94"
              ],
              "summary": "esbuild enables any website to send any requests to the development server and read the response",
              "details": "### Summary\n\nesbuild allows any websites to send any request to the development server and read the response due to default CORS settings.\n\n### Details\n\nesbuild sets `Access-Control-Allow-Origin: *` header to all requests, including the SSE connection, which allows any websites to send any request to the development server and read the response.\n\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L121\nhttps://github.com/evanw/esbuild/blob/df815ac27b84f8b34374c9182a93c94718f8a630/pkg/api/serve_other.go#L363\n\n**Attack scenario**:\n\n1. The attacker serves a malicious web page (`http://malicious.example.com`).\n1. The user accesses the malicious web page.\n1. The attacker sends a `fetch('http://127.0.0.1:8000/main.js')` request by JS in that malicious web page. This request is normally blocked by same-origin policy, but that's not the case for the reasons above.\n1. The attacker gets the content of `http://127.0.0.1:8000/main.js`.\n\nIn this scenario, I assumed that the attacker knows the URL of the bundle output file name. But the attacker can also get that information by\n\n- Fetching `/index.html`: normally you have a script tag here\n- Fetching `/assets`: it's common to have a `assets` directory when you have JS files and CSS files in a different directory and the directory listing feature tells the attacker the list of files\n- Connecting `/esbuild` SSE endpoint: the SSE endpoint sends the URL path of the changed files when the file is changed (`new EventSource('/esbuild').addEventListener('change', e =\u003e console.log(e.type, e.data))`)\n- Fetching URLs in the known file: once the attacker knows one file, the attacker can know the URLs imported from that file\n\nThe scenario above fetches the compiled content, but if the victim has the source map option enabled, the attacker can also get the non-compiled content by fetching the source map file.\n\n### PoC\n\n1. Download [reproduction.zip](https://github.com/user-attachments/files/18561484/reproduction.zip)\n2. Extract it and move to that directory\n1. Run `npm i`\n1. Run `npm run watch`\n1. Run `fetch('http://127.0.0.1:8000/app.js').then(r =\u003e r.text()).then(content =\u003e console.log(content))` in a different website's dev tools.\n\n![image](https://github.com/user-attachments/assets/08fc2e4d-e1ec-44ca-b0ea-78a73c3c40e9)\n\n### Impact\n\nUsers using the serve feature may get the source code stolen by malicious websites.",
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N"
                }
              ],
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "esbuild",
                    "purl": "pkg:npm/esbuild"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.25.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "last_known_affected_version_range": "\u003c= 0.24.2",
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-67mh-4wv8-2f99/GHSA-67mh-4wv8-2f99.json"
                  }
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/evanw/esbuild/security/advisories/GHSA-67mh-4wv8-2f99"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/evanw/esbuild/commit/de85afd65edec9ebc44a11e245fd9e9a2e99760d"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/evanw/esbuild"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-346"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2025-02-10T17:48:07Z",
                "nvd_published_at": null,
                "severity": "MODERATE"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-67mh-4wv8-2f99"
              ],
              "aliases": [
                "GHSA-67mh-4wv8-2f99"
              ],
              "max_severity": "5.3"
            }
          ]
        }
      ]
    }
  ],
  "experimental_config": {
    "licenses": {
      "summary": false,
      "allowlist": null
    }
  }
}
